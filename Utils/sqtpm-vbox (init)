#!/bin/bash

### BEGIN INIT INFO
# Provides:          sqtpm-vbox
# Required-Start:    $local_fs $syslog vboxdrv 
# Required-Stop:     $local_fs $syslog 
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# X-Interactive:     true
# Short-Description: Start/stop sqtpm VM
### END INIT INFO


. /lib/lsb/init-functions

test -f /etc/default/rcS && . /etc/default/rcS

vbm="sudo -u www-data /usr/bin/vboxmanage"

st () {
  cst=`$vbm showvminfo sqtpm 2>/dev/null`
  if [[ $? -ne 0 ]]; then
    log_daemon_msg "No sqtpm VM" "sqtpm-vbox "
    exit 1
  fi

  echo "$cst" | grep "^State" | sed -e "s/  */ /g" | cut -f 2 -d " "
}


case $1 in

    start)
	if [[ `st` == "powered" || `st` == "aborted" ]]; then 
	    log_daemon_msg "Starting sqtpm VM" "sqtpm-vbox "
	    $vbm startvm sqtpm --type headless
            log_end_msg 0
	fi
	;;

    stop)
	if [[ `st` == "powered" || `st` == "aborted" ]]; then 
	    exit
	fi

	log_daemon_msg "Stopping sqtpm VM" "sqtpm-vbox "
	
	if [[ `st`  == "paused" ]]; then 
	    $vbm controlvm sqtpm resume
	    sleep 5
	fi

	while [[ `st` == "paused" ]]; do 
	    sleep 5
	done

	if [[ `st` == "running" ]]; then 
	    $vbm controlvm sqtpm acpipowerbutton
	    sleep 5
	    i=0
	    while [[ `st` != "powered" &&  i -lt 30 ]]; do 
		echo -n '.'
		$vbm controlvm sqtpm acpipowerbutton
		sleep 5
		((i+=5))
	    done
	fi
        log_end_msg 0
	;;
    
    status)
        cst=`$vbm showvminfo sqtpm 2>/dev/null`
	if [[ $? -ne 0 ]]; then
	    echo "No sqtpm VM"
	else
	    echo "$cst" | grep "^State" | sed -e "s/  */ /g"
	fi
	;;

esac
